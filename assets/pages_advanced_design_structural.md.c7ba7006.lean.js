import{_ as s,o as n,c as a,a as l}from"./app.dd688bc7.js";const A=JSON.parse('{"title":"2.结构型模式(structural 7)","description":"","frontmatter":{},"headers":[{"level":2,"title":"2.1 适配器模式(adapter)","slug":"_2-1-适配器模式-adapter","link":"#_2-1-适配器模式-adapter","children":[]},{"level":2,"title":"2.2 装饰者模式(decorator)","slug":"_2-2-装饰者模式-decorator","link":"#_2-2-装饰者模式-decorator","children":[]},{"level":2,"title":"2.3 代理模式(proxy)","slug":"_2-3-代理模式-proxy","link":"#_2-3-代理模式-proxy","children":[]},{"level":2,"title":"2.4 外观模式(facade)","slug":"_2-4-外观模式-facade","link":"#_2-4-外观模式-facade","children":[]},{"level":2,"title":"2.5 桥接模式(bridge)","slug":"_2-5-桥接模式-bridge","link":"#_2-5-桥接模式-bridge","children":[]},{"level":2,"title":"2.6 组合模式(composite)","slug":"_2-6-组合模式-composite","link":"#_2-6-组合模式-composite","children":[]},{"level":2,"title":"2.7 享元模式(flyweight)","slug":"_2-7-享元模式-flyweight","link":"#_2-7-享元模式-flyweight","children":[]}],"relativePath":"pages/advanced/design/structural.md","lastUpdated":1722406356000}'),p={name:"pages/advanced/design/structural.md"},o=l("",50),e=[o];function t(c,r,F,y,D,B){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{A as __pageData,E as default};
